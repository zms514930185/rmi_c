<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.jnshu.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="ipo" jdbcType="VARCHAR" property="ipo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="progress" jdbcType="INTEGER" property="progress" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, img, ipo, status, job_id, progress, create_at, update_at, create_by, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jnshu.model.User">
    insert into user (id, name, img, 
      ipo, status, job_id, 
      progress, create_at, update_at, 
      create_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{ipo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{jobId,jdbcType=BIGINT}, 
      #{progress,jdbcType=INTEGER}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jnshu.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="ipo != null">
        ipo,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="progress != null">
        progress,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="ipo != null">
        #{ipo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="progress != null">
        #{progress,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnshu.model.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="ipo != null">
        ipo = #{ipo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=BIGINT},
      </if>
      <if test="progress != null">
        progress = #{progress,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnshu.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      ipo = #{ipo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      job_id = #{jobId,jdbcType=BIGINT},
      progress = #{progress,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!--查询user-->
  <select id="selectUserSelective" parameterType="com.jnshu.model.User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <trim prefix="WHERE" prefixOverrides="AND|OR ">
      <if test="id != null ">ID=#{id}</if>
      <if test="name != null and name !=''">and name = #{name}</if>
      <if test="img != null and img !=''">and img = #{img}</if>
      <if test="ipo != null and ipo !=''">and ipo = #{ipo}</if>
      <if test="status != null">and status = #{status}</if>
      <if test="jobId != null">and job_id = #{jobId}</if>
      <if test="progress != null">and progress = #{progress}</if>
      <if test="createBy !=null and createBy !=''">and create_by LIKE CONCAT('%',#{createBy},'%')</if>
      <if test="updateBy !=null and updateBy !=''">and update_by = #{updateBy}</if>
      <if test="createAt !=null ">and create_at = #{createAt}</if>
      <if test="updateAt !=null ">and update_at = #{updateAt}</if>
    </trim>
  </select>
</mapper>