<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">
    <!--扫描注解-->
    <context:component-scan base-package="com.jnshu"/>
    <!--导入redis配置-->
    <import resource="classpath:redis.xml"/>
    <!--导入第三方API接口所需参数-->
    <!--<util:properties id="config" location="classpath*:config.properties" />-->
    <!--<context:property-placeholder  location = "classpath*:config.properties"/>-->
    <!--导入数据库参数等其他参数配置，如短信配置参数-->
    <context:property-placeholder location="classpath*:*.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="5" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="20000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="600000" />
        <property name="maxEvictableIdleTimeMillis" value="900000" />

        <property name="validationQuery" value="select 1" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="keepAlive" value="true" />
        <property name="phyMaxUseCount" value="100000" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <!--mybatis配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--添加mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:*Mapper.xml"/>
    </bean>

    <!--要扫描映射接口的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jnshu.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--memcached配置-->
    <bean name="memcachedClient"
          class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean" destroy-method="shutdown">
        <property name="servers" value="127.0.0.1:11211"/>
    </bean>

    <bean name="clientCheckNum" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <!--要连接的RMI地址、端口、对应服务名称-->
        <property name="serviceUrl" value="rmi://127.0.0.1:1022/checkNumRmi"/>
        <!--客户端对应接口-->
        <property name="serviceInterface" value="com.jnshu.service.CheckNumService_0"/>
        <!--连接出错时自动重连-->
        <property name="refreshStubOnConnectFailure" value="true"/>
        <!--不在容器启动的时候创建与Server端的连接-->
        <property name="lookupStubOnStartup" value="false"/>
    </bean>
    <bean name="clientUser" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://127.0.0.1:1022/userRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.UserService_0"/>
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="lookupStubOnStartup" value="false"/>
    </bean>
    <bean name="clientJob" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://127.0.0.1:1022/jobRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.JobService_0"/>
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="lookupStubOnStartup" value="false"/>
    </bean>

    <!--第2台服务-->
    <bean name="clientCheckNum_1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <!--要连接的RMI地址、端口、对应服务名称-->
        <property name="serviceUrl" value="rmi://127.0.0.1:1023/checkNumRmi"/>
        <!--客户端对应接口-->
        <property name="serviceInterface" value="com.jnshu.service.CheckNumService_1"/>
        <!--连接出错时自动重连-->
        <property name="refreshStubOnConnectFailure" value="true"/>
        <!--不在容器启动的时候创建与Server端的连接-->
        <property name="lookupStubOnStartup" value="false"/>
    </bean>
    <bean name="clientUser_1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://127.0.0.1:1023/userRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.UserService_1"/>
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="lookupStubOnStartup" value="false"/>
    </bean>
    <bean name="clientJob_1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://127.0.0.1:1023/jobRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.JobService_1"/>
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="lookupStubOnStartup" value="false"/>
    </bean>
</beans>